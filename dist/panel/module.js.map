{"version":3,"sources":["../../src/panel/module.js"],"names":["getGraph","data","graph","jsbayes","newGraph","nodes","map","status","node","states","state","name","addNode","id","graphNode","parents","forEach","addParent","parent","cpt","length","parseFloat","num","push","entry","setCpt","sample","PanelCtrl","jsbayesviz","ExampleAppPanelCtrl","$scope","$injector","template","$","document","ready","g","fromGraph","draw","width","height","samples"],"mappings":"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","file":"module.js","sourcesContent":["import {PanelCtrl} from  'app/plugins/sdk';\nimport '../css/example-app.css!'\nimport * as jsbayes from '../lib/jsbayes';\nimport * as jsbayesviz from '../lib/jsbayes-viz';\n\nclass ExampleAppPanelCtrl extends PanelCtrl {\n\n  constructor($scope, $injector) {\n    super($scope, $injector);\n  }\n\n}\n\nfunction getGraph(data) {\n  let graph = jsbayes.newGraph();\n\n  //creating the nodes\n  data.nodes.map(node => {\n    let status = node.states.map(state => state.name);\n    graph.addNode(node.id, status);\n  });\n\n  //adding data to nodes\n  data.nodes.map(node => {\n    let graphNode = graph.node(node.id);\n\n    //setting parents\n    node.parents.forEach(parent => graphNode.addParent(graph.node(parent)));\n\n    //setting cpt\n    let cpt = [];\n    if(node.cpt.length === 1) {\n      cpt = node.cpt[0].map(num => parseFloat(num));\n    } else {\n      node.cpt.map(entry => cpt.push(entry.map(num => parseFloat(num))));\n    }\n\n    graphNode.setCpt(cpt);\n  });\n\n  graph.sample(20000);\n\n  return graph;\n}\n\nExampleAppPanelCtrl.template = '<svg id=\"bbn\"></svg>';\n\n$(document).ready(function() {\n  let data = {\n    \"name\": \"Rete Bayesiana A\",\n\n    \"databaseWriteName\": \"Influx2\",\n    \"refreshTime\": 5000,\n\n    \"nodes\": [\n      {\n        \"id\": \"A\",\n        \"name\": \"Node A\",\n        \"parents\": [\"B\"],\n\n        \"states\": [\n          {\"name\": \"State 0\", \"trigger\": \"%v>=90\"},\n          {\"name\": \"State 1\", \"trigger\": \"40<%v<90\"},\n          {\"name\": \"State 2\", \"trigger\": \"%v<=40\"}\n        ],\n        \"cpt\": [\n          [0.4, 0.1, 0.5],\n          [0.2, 0.2, 0.6]\n        ],\n\n        \"sensor\": {\n          \"databaseSensorName\": \"Influx1\",\n          \"databaseSensorTable\": \"Server1\",\n          \"databaseSensorColumn\": \"CPU\"\n        }\n      },\n      {\n        \"id\": \"B\",\n        \"name\": \"Node B\",\n        \"parents\": [],\n\n        \"states\": [\n          {\"name\": \"State 0\", \"trigger\": \"%v>=50\"},\n          {\"name\": \"State 1\", \"trigger\": \"%v<50\"}\n        ],\n        \"cpt\": [\n          [0.6, 0.4]\n        ],\n\n        \"sensor\": {}\n      },\n      {\n        \"id\": \"C\",\n        \"name\": \"Node C\",\n        \"parents\": [\"A\", \"B\"],\n\n        \"states\": [\n          {\"name\": \"State 0\", \"trigger\": \"%v>=50\"},\n          {\"name\": \"State 1\", \"trigger\": \"0<=%v<50\"}\n        ],\n        \"cpt\": [\n          [0.4, 0.6],\n          [0.2, 0.8],\n\n          [0.3, 0.7],\n          [0.4, 0.6],\n\n          [0.1, 0.9],\n          [0.7, 0.3]\n        ],\n\n        \"sensor\": {}\n      }\n    ]\n  };\n\n  let graph = getGraph(data);\n\n  let g = jsbayesviz.fromGraph(graph);\n\n  jsbayesviz.draw({\n    id: '#bbn',\n    width: 800,\n    height: 800,\n    graph: g,\n    samples: 15000\n  });\n});\n\nexport {\n  ExampleAppPanelCtrl as PanelCtrl\n};\n\n"]}